name: Build o1js
on:
  push:
    branches:
      - main
      - develop
      - v1
      - v3
  pull_request:
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  Prepare:
    runs-on: [sdk-self-hosted-linux-amd64-build-system]
    steps:
      - name: Build
        uses: ./.github/actions/build

  Check-mina-commit:
    needs: Prepare
    timeout-minutes: 5
    runs-on: [sdk-self-hosted-linux-amd64-build-system]

    strategy:
      fail-fast: false
    steps:
      - name: Restore repository
        uses: actions/cache@v4
        with:
          path: .
          key: repo-${{ github.sha }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Check Commit
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            dist
          key: npm run checkCommit

  Build-And-Test-Server:
    needs: Prepare
    timeout-minutes: 210
    runs-on: [sdk-self-hosted-linux-amd64-build-system]
    strategy:
      fail-fast: false
      matrix:
        test_type:
          [
            'Simple integration tests',
            'Reducer integration tests',
            'DEX integration tests',
            'DEX integration test with proofs',
            'Voting integration tests',
            'Verification Key Regression Check 1',
            'Verification Key Regression Check 2',
            'CommonJS test',
          ]
    steps:
      - name: "Build-And-Test-Server"
        uses: ./.github/actions/test-server.yml

  Run-Unit-Tests:
    needs: Prepare
    name: Run unit tests parallel
    timeout-minutes: 210
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chunk: [1, 2, 3, 4, 5, 6, 7, 8]
    steps:
      - name: unit-tests
        uses: ./.github/actions/unit-test

  Build-And-Test-Server-Unit-Tests:
    name: Build-And-Test-Server (Unit tests)
    needs: [Run-Unit-Tests]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All unit tests completed successfully"

  Build-And-Test-Web:
    needs: Prepare
    timeout-minutes: 90
    runs-on: ubuntu-latest
    steps:
      - name: Restore repository
        uses: actions/cache@v4
        with:
          path: .
          key: repo-${{ github.sha }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.OS }}-playwright-${{ hashFiles('**/package-lock.json') }}

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npm run e2e:install

      - name: Build o1js and prepare the web server
        run: |
          npm run build:web
          npm run e2e:prepare-server

      - name: Execute E2E tests
        run: npm run test:e2e

      - name: Upload E2E test artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: always()
        with:
          if-no-files-found: ignore
          name: e2e-tests-report
          path: tests/report/
          retention-days: 30

  Release-on-NPM:
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 180
    runs-on: ubuntu-latest
    needs: [Build-And-Test-Server, Run-Unit-Tests, Build-And-Test-Web]
    steps:
      - name: Restore repository
        uses: actions/cache@v4
        with:
          path: .
          key: repo-${{ github.sha }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build o1js
        run: |
          npm ci
          npm run prepublishOnly

      - name: Publish to NPM if version has changed
        id: publish
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          strategy: upgrade
        env:
          INPUT_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Tag new version
        if: ${{ steps.publish.outputs.type }} # https://github.com/JS-DevTools/npm-publish?tab=readme-ov-file#action-output
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASED_VERSION: ${{ steps.publish.outputs.version }}
        run: |
          git tag $RELEASED_VERSION
          git push origin $RELEASED_VERSION
      - name: Create Release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174
        if: success()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.publish.outputs.version }}
          generateReleaseNotes: true
          name: Release ${{ steps.publish.outputs.version }}
          skipIfReleaseExists: true

  Release-mina-signer-on-NPM:
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 180
    runs-on: ubuntu-latest
    needs: [Build-And-Test-Server, Run-Unit-Tests, Build-And-Test-Web]
    steps:
      - name: Restore repository
        uses: actions/cache@v4
        with:
          path: .
          key: repo-${{ github.sha }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build mina-signer
        run: |
          npm ci
          cd src/mina-signer
          npm ci
          npm run prepublishOnly

      - name: Publish to NPM if version has changed
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: './src/mina-signer/package.json'
          strategy: upgrade
        env:
          INPUT_TOKEN: ${{ secrets.NPM_TOKEN }}
